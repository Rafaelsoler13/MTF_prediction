#CALC TRANSMEMBRANE SIZE

grep "Transmembrane\|Intramembrane" membrane.gff > transmembrane.gff
awk -F "\t" '{print sqrt($5-$4)^2}' transmembrane.gff > transmembrane_filtered_.csv
awk 'BEGIN{s=0;}{s=s+$1;}END{print s/NR;}' transmembrane_filtered_.csv 

##HUMAN 22.9203  --> Half = 12, Full = 23
##MOUSE 23.1724 --> Half = 12, Full = 23

----------------
----------------

#FOR CYTOPLASMIC

##FOR ALL MEMBRANES

###Filter search from UniProt

annotation:(type:topo_dom cytoplasmic) keyword:"Membrane [KW-0472]" AND reviewed:yes AND organism:"Homo sapiens (Human) [9606]" #human
annotation:(type:topo_dom cytoplasmic) keyword:"Membrane [KW-0472]" AND reviewed:yes AND organism:"Mus musculus (Mouse) [10090]" #mouse

###Download data GFF from Uniprot
###Filter to obtain only Cytoplasmic domains

grep "Cytoplasmic" membrane.gff > membrane_filtered.gff

###AWK to adapt to Uniprot format

awk -F "\t" '{print $1"["$4"-"$5"]"}' membrane_filtered.gff > membrane_filtered_IDs.csv

###Download fasta with these coords with "Retrieve/ID mapping", from "UniProtKB AC/ID" to "UniProtKB", format: FASTA (saurce list)
###Run Deeptfactor

cd ..
cd ..
conda activate deeptfactor
python tf_running.py -i ~/membrane.fasta -g cuda -o ./result

###Filter the positive results

grep "True" prediction_result.txt | sort -rn -k3 > all_membrane_true.csv 

###Extract UniProtKB AC/IDs to download GeneNames with "Retrieve/ID mapping"

awk '{print $1}' all_membrane_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

----------------
----------------

# FOR ALL MEMBRANES + HALF TRANSMEMBRANE/INTRAMEMBRANE

###Same but substract 12 aminoacids to the first column

awk -f half_cytoplasmic.awk membrane.gff > membrane_filtered.gff
awk -F "\t" '{print $1"["$4"-"$5"]"}' membrane_filtered.gff > membrane_filtered_IDs.csv
python tf_running.py -i ~/membrane.fasta -g cuda -o ./result
grep "True" prediction_result.txt | sort -rn -k3 > all_membrane_true.csv 
awk '{print $1}' all_membrane_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

----------------
----------------

# FOR ALL MEMBRANES + FULL TRANSMEMBRANE

###Same but substract 23 aminoacids to the first column

awk -f full_cytoplasmic.awk membrane.gff > membrane_filtered.gff
awk -F "\t" '{print $1"["$4"-"$5"]"}' membrane_filtered.gff > membrane_filtered_IDs.csv
python tf_running.py -i ~/membrane.fasta -g cuda -o ./result
grep "True" prediction_result.txt | sort -rn -k3 > all_membrane_true.csv 
awk '{print $1}' all_membrane_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

###Manually eliminate the duplicates keeping the highest score

----------------
----------------

#FOR EXTRACELLULAR

##FOR ALL MEMBRANES

###Filter search from UniProt

annotation:(type:topo_dom extracellular) keyword:"Membrane [KW-0472]" AND reviewed:yes AND organism:"Homo sapiens (Human) [9606]" #human

annotation:(type:topo_dom extracellular) keyword:"Membrane [KW-0472]" AND reviewed:yes AND organism:"Mus musculus (Mouse) [10090]" #mouse

grep "Extracellular" membrane.gff > extracellular.gff

###AWK to adapt to Uniprot format

awk -F "\t" '{print $1"["$4"-"$5"]"}' extracellular.gff > extracellular_filtered_IDs.csv

###Download fasta with these coords with "Retrieve/ID mapping", from "UniProtKB AC/ID" to "UniProtKB", format: FASTA (saurce list)
###Run Deeptfactor

cd ..
cd ..
cd ..
conda activate deeptfactor
python tf_running.py -i ~/extracellular.fasta -g cuda -o ./result

###Filter the positive results

grep "True" prediction_result.txt | sort -rn -k3 > extracellular_true.csv 

###Extract UniProtKB AC/IDs to download GeneNames with "Retrieve/ID mapping"

awk '{print $1}' extracellular_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

----------------
----------------

##FOR ALL MEMBRANES +12

###Same but substract 12 aminoacids to the first column

awk -f half_extracellular.awk membrane.gff > extracellular.gff
awk -F "\t" '{print $1"["$4"-"$5"]"}' extracellular.gff > extracellular_filtered_IDs.csv
python tf_running.py -i ~/extracellular.fasta -g cuda -o ./result
grep "True" prediction_result.txt | sort -rn -k3 > extracellular_true.csv 
awk '{print $1}' extracellular_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

----------------
----------------

# FOR ALL MEMBRANES + FULL TRANSMEMBRANE

###Same but substract 23 aminoacids to the first column

awk -f full_extracellular.awk membrane.gff > extracellular.gff
awk -F "\t" '{print $1"["$4"-"$5"]"}' extracellular.gff > extracellular_filtered_IDs.csv
python tf_running.py -i ~/extracellular.fasta -g cuda -o ./result
grep "True" prediction_result.txt | sort -rn -k3 > extracellular_true.csv 
awk '{print $1}' extracellular_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

-------------
-------------

#FOR LUMENAL

##FOR ALL MEMBRANES

###Filter search from UniProt

annotation:(type:topo_dom lumenal) keyword:"Membrane [KW-0472]" AND reviewed:yes AND organism:"Homo sapiens (Human) [9606]" #human

annotation:(type:topo_dom lumenal) keyword:"Membrane [KW-0472]" AND reviewed:yes AND organism:"Mus musculus (Mouse) [10090]" #mouse

grep "Lumenal" membrane.gff > lumenal.gff

###AWK to adapt to Uniprot format

awk -F "\t" '{print $1"["$4"-"$5"]"}' lumenal.gff > lumenal_filtered_IDs.csv

###Download fasta with these coords with "Retrieve/ID mapping", from "UniProtKB AC/ID" to "UniProtKB", format: FASTA (saurce list)
###Run Deeptfactor

cd ..
cd ..
cd ..
conda activate deeptfactor
python tf_running.py -i ~/lumenal.fasta -g cuda -o ./result



###Filter the positive results

grep "True" prediction_result.txt | sort -rn -k3 > lumenal_true.csv 

###Extract UniProtKB AC/IDs to download GeneNames with "Retrieve/ID mapping"

awk '{print $1}' lumenal_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

-------------
-------------

##FOR ALL MEMBRANES +12

###Same but substract 12 aminoacids to the first column

awk -f half_lumenal.awk membrane.gff > lumenal.gff
awk -F "\t" '{print $1"["$4"-"$5"]"}' lumenal.gff > lumenal_filtered_IDs.csv
python tf_running.py -i ~/lumenal.fasta -g cuda -o ./result
grep "True" prediction_result.txt | sort -rn -k3 > lumenal_true.csv 
awk '{print $1}' lumenal_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv

# FOR ALL MEMBRANES + FULL TRANSMEMBRANE

###Same but substract 23 aminoacids to the first column

awk -f full_lumenal.awk membrane.gff > lumenal.gff
awk -F "\t" '{print $1"["$4"-"$5"]"}' lumenal.gff > lumenal_filtered_IDs.csv
python tf_running.py -i ~/lumenal.fasta -g cuda -o ./result
grep "True" prediction_result.txt | sort -rn -k3 > lumenal_true.csv 
awk '{print $1}' lumenal_true.csv | cut -c 4- | cut -f1 -d"|" > uniprot_names.csv


awk -F'\t' -v OFS='\t' '/Lumenal/{a=$0; $4-=12;p=$0; $0=a;$5+=12;n=$0; if(index(pre, "Transmembrane")>0){$4-=12; print p} if(getline){if(index($0, "Transmembrane")){print n}}} {pre=$0}' membrane.gff > lumenal_test.gff

awk -F "\t" '{print $1"["$4"-"$5"]"}' extracellular.gff > extracellular_filtered_IDs.csv

-------------

# Check errors

grep -hv "^>" mouse_all_extracellular_filtered.fasta > test.fasta

grep "U" test.fasta

"P55073"
"Q91ZI8"




